// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/schedule/schedule.proto

package schedule

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	any "github.com/golang/protobuf/ptypes/any"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ListScheduleRequest struct {
	Type                 int32    `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListScheduleRequest) Reset()         { *m = ListScheduleRequest{} }
func (m *ListScheduleRequest) String() string { return proto.CompactTextString(m) }
func (*ListScheduleRequest) ProtoMessage()    {}
func (*ListScheduleRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_897fc524eec70956, []int{0}
}

func (m *ListScheduleRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListScheduleRequest.Unmarshal(m, b)
}
func (m *ListScheduleRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListScheduleRequest.Marshal(b, m, deterministic)
}
func (m *ListScheduleRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListScheduleRequest.Merge(m, src)
}
func (m *ListScheduleRequest) XXX_Size() int {
	return xxx_messageInfo_ListScheduleRequest.Size(m)
}
func (m *ListScheduleRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListScheduleRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListScheduleRequest proto.InternalMessageInfo

func (m *ListScheduleRequest) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

type CreateGrpcScheduleRequest struct {
	Period               string    `protobuf:"bytes,1,opt,name=period,proto3" json:"period,omitempty"`
	Schedule             *Schedule `protobuf:"bytes,2,opt,name=schedule,proto3" json:"schedule,omitempty"`
	GrpcCall             *GrpcCall `protobuf:"bytes,3,opt,name=grpcCall,proto3" json:"grpcCall,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *CreateGrpcScheduleRequest) Reset()         { *m = CreateGrpcScheduleRequest{} }
func (m *CreateGrpcScheduleRequest) String() string { return proto.CompactTextString(m) }
func (*CreateGrpcScheduleRequest) ProtoMessage()    {}
func (*CreateGrpcScheduleRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_897fc524eec70956, []int{1}
}

func (m *CreateGrpcScheduleRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateGrpcScheduleRequest.Unmarshal(m, b)
}
func (m *CreateGrpcScheduleRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateGrpcScheduleRequest.Marshal(b, m, deterministic)
}
func (m *CreateGrpcScheduleRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateGrpcScheduleRequest.Merge(m, src)
}
func (m *CreateGrpcScheduleRequest) XXX_Size() int {
	return xxx_messageInfo_CreateGrpcScheduleRequest.Size(m)
}
func (m *CreateGrpcScheduleRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateGrpcScheduleRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateGrpcScheduleRequest proto.InternalMessageInfo

func (m *CreateGrpcScheduleRequest) GetPeriod() string {
	if m != nil {
		return m.Period
	}
	return ""
}

func (m *CreateGrpcScheduleRequest) GetSchedule() *Schedule {
	if m != nil {
		return m.Schedule
	}
	return nil
}

func (m *CreateGrpcScheduleRequest) GetGrpcCall() *GrpcCall {
	if m != nil {
		return m.GrpcCall
	}
	return nil
}

type UpdateGrpcScheduleRequest struct {
	Period               string    `protobuf:"bytes,1,opt,name=period,proto3" json:"period,omitempty"`
	Schedule             *Schedule `protobuf:"bytes,2,opt,name=schedule,proto3" json:"schedule,omitempty"`
	GrpcCall             *GrpcCall `protobuf:"bytes,3,opt,name=grpcCall,proto3" json:"grpcCall,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *UpdateGrpcScheduleRequest) Reset()         { *m = UpdateGrpcScheduleRequest{} }
func (m *UpdateGrpcScheduleRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateGrpcScheduleRequest) ProtoMessage()    {}
func (*UpdateGrpcScheduleRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_897fc524eec70956, []int{2}
}

func (m *UpdateGrpcScheduleRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateGrpcScheduleRequest.Unmarshal(m, b)
}
func (m *UpdateGrpcScheduleRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateGrpcScheduleRequest.Marshal(b, m, deterministic)
}
func (m *UpdateGrpcScheduleRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateGrpcScheduleRequest.Merge(m, src)
}
func (m *UpdateGrpcScheduleRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateGrpcScheduleRequest.Size(m)
}
func (m *UpdateGrpcScheduleRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateGrpcScheduleRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateGrpcScheduleRequest proto.InternalMessageInfo

func (m *UpdateGrpcScheduleRequest) GetPeriod() string {
	if m != nil {
		return m.Period
	}
	return ""
}

func (m *UpdateGrpcScheduleRequest) GetSchedule() *Schedule {
	if m != nil {
		return m.Schedule
	}
	return nil
}

func (m *UpdateGrpcScheduleRequest) GetGrpcCall() *GrpcCall {
	if m != nil {
		return m.GrpcCall
	}
	return nil
}

type CreateBrokerScheduleRequest struct {
	Period               string       `protobuf:"bytes,1,opt,name=period,proto3" json:"period,omitempty"`
	Schedule             *Schedule    `protobuf:"bytes,2,opt,name=schedule,proto3" json:"schedule,omitempty"`
	BrokerEvent          *BrokerEvent `protobuf:"bytes,3,opt,name=brokerEvent,proto3" json:"brokerEvent,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *CreateBrokerScheduleRequest) Reset()         { *m = CreateBrokerScheduleRequest{} }
func (m *CreateBrokerScheduleRequest) String() string { return proto.CompactTextString(m) }
func (*CreateBrokerScheduleRequest) ProtoMessage()    {}
func (*CreateBrokerScheduleRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_897fc524eec70956, []int{3}
}

func (m *CreateBrokerScheduleRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateBrokerScheduleRequest.Unmarshal(m, b)
}
func (m *CreateBrokerScheduleRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateBrokerScheduleRequest.Marshal(b, m, deterministic)
}
func (m *CreateBrokerScheduleRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateBrokerScheduleRequest.Merge(m, src)
}
func (m *CreateBrokerScheduleRequest) XXX_Size() int {
	return xxx_messageInfo_CreateBrokerScheduleRequest.Size(m)
}
func (m *CreateBrokerScheduleRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateBrokerScheduleRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateBrokerScheduleRequest proto.InternalMessageInfo

func (m *CreateBrokerScheduleRequest) GetPeriod() string {
	if m != nil {
		return m.Period
	}
	return ""
}

func (m *CreateBrokerScheduleRequest) GetSchedule() *Schedule {
	if m != nil {
		return m.Schedule
	}
	return nil
}

func (m *CreateBrokerScheduleRequest) GetBrokerEvent() *BrokerEvent {
	if m != nil {
		return m.BrokerEvent
	}
	return nil
}

type UpdateBrokerScheduleRequest struct {
	Period               string       `protobuf:"bytes,1,opt,name=period,proto3" json:"period,omitempty"`
	Schedule             *Schedule    `protobuf:"bytes,2,opt,name=schedule,proto3" json:"schedule,omitempty"`
	BrokerEvent          *BrokerEvent `protobuf:"bytes,3,opt,name=brokerEvent,proto3" json:"brokerEvent,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *UpdateBrokerScheduleRequest) Reset()         { *m = UpdateBrokerScheduleRequest{} }
func (m *UpdateBrokerScheduleRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateBrokerScheduleRequest) ProtoMessage()    {}
func (*UpdateBrokerScheduleRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_897fc524eec70956, []int{4}
}

func (m *UpdateBrokerScheduleRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateBrokerScheduleRequest.Unmarshal(m, b)
}
func (m *UpdateBrokerScheduleRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateBrokerScheduleRequest.Marshal(b, m, deterministic)
}
func (m *UpdateBrokerScheduleRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateBrokerScheduleRequest.Merge(m, src)
}
func (m *UpdateBrokerScheduleRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateBrokerScheduleRequest.Size(m)
}
func (m *UpdateBrokerScheduleRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateBrokerScheduleRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateBrokerScheduleRequest proto.InternalMessageInfo

func (m *UpdateBrokerScheduleRequest) GetPeriod() string {
	if m != nil {
		return m.Period
	}
	return ""
}

func (m *UpdateBrokerScheduleRequest) GetSchedule() *Schedule {
	if m != nil {
		return m.Schedule
	}
	return nil
}

func (m *UpdateBrokerScheduleRequest) GetBrokerEvent() *BrokerEvent {
	if m != nil {
		return m.BrokerEvent
	}
	return nil
}

type Schedule struct {
	ScheduleName         string   `protobuf:"bytes,1,opt,name=scheduleName,proto3" json:"scheduleName,omitempty"`
	ScheduleComment      string   `protobuf:"bytes,2,opt,name=ScheduleComment,proto3" json:"ScheduleComment,omitempty"`
	Id                   int32    `protobuf:"varint,3,opt,name=Id,proto3" json:"Id,omitempty"`
	Any                  *any.Any `protobuf:"bytes,7,opt,name=any,proto3" json:"any,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Schedule) Reset()         { *m = Schedule{} }
func (m *Schedule) String() string { return proto.CompactTextString(m) }
func (*Schedule) ProtoMessage()    {}
func (*Schedule) Descriptor() ([]byte, []int) {
	return fileDescriptor_897fc524eec70956, []int{5}
}

func (m *Schedule) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Schedule.Unmarshal(m, b)
}
func (m *Schedule) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Schedule.Marshal(b, m, deterministic)
}
func (m *Schedule) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Schedule.Merge(m, src)
}
func (m *Schedule) XXX_Size() int {
	return xxx_messageInfo_Schedule.Size(m)
}
func (m *Schedule) XXX_DiscardUnknown() {
	xxx_messageInfo_Schedule.DiscardUnknown(m)
}

var xxx_messageInfo_Schedule proto.InternalMessageInfo

func (m *Schedule) GetScheduleName() string {
	if m != nil {
		return m.ScheduleName
	}
	return ""
}

func (m *Schedule) GetScheduleComment() string {
	if m != nil {
		return m.ScheduleComment
	}
	return ""
}

func (m *Schedule) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Schedule) GetAny() *any.Any {
	if m != nil {
		return m.Any
	}
	return nil
}

type GrpcCall struct {
	ClientName           string   `protobuf:"bytes,1,opt,name=ClientName,proto3" json:"ClientName,omitempty"`
	MethodName           string   `protobuf:"bytes,2,opt,name=MethodName,proto3" json:"MethodName,omitempty"`
	PayloadStr           string   `protobuf:"bytes,3,opt,name=PayloadStr,proto3" json:"PayloadStr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GrpcCall) Reset()         { *m = GrpcCall{} }
func (m *GrpcCall) String() string { return proto.CompactTextString(m) }
func (*GrpcCall) ProtoMessage()    {}
func (*GrpcCall) Descriptor() ([]byte, []int) {
	return fileDescriptor_897fc524eec70956, []int{6}
}

func (m *GrpcCall) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GrpcCall.Unmarshal(m, b)
}
func (m *GrpcCall) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GrpcCall.Marshal(b, m, deterministic)
}
func (m *GrpcCall) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GrpcCall.Merge(m, src)
}
func (m *GrpcCall) XXX_Size() int {
	return xxx_messageInfo_GrpcCall.Size(m)
}
func (m *GrpcCall) XXX_DiscardUnknown() {
	xxx_messageInfo_GrpcCall.DiscardUnknown(m)
}

var xxx_messageInfo_GrpcCall proto.InternalMessageInfo

func (m *GrpcCall) GetClientName() string {
	if m != nil {
		return m.ClientName
	}
	return ""
}

func (m *GrpcCall) GetMethodName() string {
	if m != nil {
		return m.MethodName
	}
	return ""
}

func (m *GrpcCall) GetPayloadStr() string {
	if m != nil {
		return m.PayloadStr
	}
	return ""
}

type BrokerEvent struct {
	Topic                string   `protobuf:"bytes,1,opt,name=Topic,proto3" json:"Topic,omitempty"`
	Key                  string   `protobuf:"bytes,2,opt,name=Key,proto3" json:"Key,omitempty"`
	Message              string   `protobuf:"bytes,3,opt,name=Message,proto3" json:"Message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BrokerEvent) Reset()         { *m = BrokerEvent{} }
func (m *BrokerEvent) String() string { return proto.CompactTextString(m) }
func (*BrokerEvent) ProtoMessage()    {}
func (*BrokerEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_897fc524eec70956, []int{7}
}

func (m *BrokerEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BrokerEvent.Unmarshal(m, b)
}
func (m *BrokerEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BrokerEvent.Marshal(b, m, deterministic)
}
func (m *BrokerEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BrokerEvent.Merge(m, src)
}
func (m *BrokerEvent) XXX_Size() int {
	return xxx_messageInfo_BrokerEvent.Size(m)
}
func (m *BrokerEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_BrokerEvent.DiscardUnknown(m)
}

var xxx_messageInfo_BrokerEvent proto.InternalMessageInfo

func (m *BrokerEvent) GetTopic() string {
	if m != nil {
		return m.Topic
	}
	return ""
}

func (m *BrokerEvent) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *BrokerEvent) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*ListScheduleRequest)(nil), "schedule.ListScheduleRequest")
	proto.RegisterType((*CreateGrpcScheduleRequest)(nil), "schedule.CreateGrpcScheduleRequest")
	proto.RegisterType((*UpdateGrpcScheduleRequest)(nil), "schedule.UpdateGrpcScheduleRequest")
	proto.RegisterType((*CreateBrokerScheduleRequest)(nil), "schedule.CreateBrokerScheduleRequest")
	proto.RegisterType((*UpdateBrokerScheduleRequest)(nil), "schedule.UpdateBrokerScheduleRequest")
	proto.RegisterType((*Schedule)(nil), "schedule.Schedule")
	proto.RegisterType((*GrpcCall)(nil), "schedule.GrpcCall")
	proto.RegisterType((*BrokerEvent)(nil), "schedule.BrokerEvent")
}

func init() { proto.RegisterFile("proto/schedule/schedule.proto", fileDescriptor_897fc524eec70956) }

var fileDescriptor_897fc524eec70956 = []byte{
	// 514 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x54, 0xc1, 0x6e, 0xd3, 0x40,
	0x10, 0xc5, 0x09, 0x69, 0xd3, 0x49, 0x55, 0xd0, 0x10, 0x90, 0x29, 0x2a, 0xaa, 0x8c, 0x80, 0x70,
	0x71, 0x50, 0x39, 0xc0, 0x95, 0x5a, 0x55, 0x55, 0x41, 0x09, 0x72, 0x0a, 0x07, 0x6e, 0x8e, 0x3d,
	0xa4, 0x06, 0xc7, 0x6b, 0xec, 0x4d, 0x25, 0xff, 0x05, 0x82, 0x3b, 0xdf, 0x8a, 0xbc, 0xde, 0xb5,
	0x37, 0xa9, 0xcd, 0xa5, 0x42, 0xca, 0xcd, 0x3b, 0xf3, 0xde, 0xdb, 0xe7, 0x59, 0xbd, 0x81, 0x83,
	0x24, 0x65, 0x9c, 0x8d, 0x33, 0xff, 0x92, 0x82, 0x65, 0x44, 0xd5, 0x87, 0x2d, 0xea, 0xd8, 0x57,
	0xe7, 0xfd, 0xe7, 0x25, 0x30, 0x8c, 0xfd, 0x68, 0x19, 0xd0, 0x78, 0xce, 0xd8, 0x3c, 0xa2, 0xb1,
	0x28, 0xce, 0x96, 0x5f, 0xc7, 0x5e, 0x9c, 0x97, 0x14, 0xeb, 0x05, 0xdc, 0x7b, 0x1f, 0x66, 0x7c,
	0x2a, 0x89, 0x2e, 0xfd, 0x58, 0x52, 0xc6, 0x11, 0xe1, 0x36, 0xcf, 0x13, 0x32, 0x8d, 0x43, 0x63,
	0xd4, 0x73, 0xc5, 0xb7, 0xf5, 0xdb, 0x80, 0x87, 0x4e, 0x4a, 0x1e, 0xa7, 0xd3, 0x34, 0xf1, 0xd7,
	0x19, 0x0f, 0x60, 0x2b, 0xa1, 0x34, 0x64, 0x81, 0xe0, 0xec, 0xb8, 0xf2, 0x84, 0x36, 0x54, 0xae,
	0xcc, 0xce, 0xa1, 0x31, 0x1a, 0x1c, 0xa1, 0x5d, 0xd9, 0xae, 0x44, 0x2a, 0x4c, 0x81, 0x9f, 0xa7,
	0x89, 0xef, 0x78, 0x51, 0x64, 0x76, 0xd7, 0xf1, 0xa7, 0xb2, 0xe3, 0x56, 0x18, 0xe1, 0xea, 0x53,
	0x12, 0x6c, 0x98, 0xab, 0x3f, 0x06, 0x3c, 0x2a, 0x67, 0x75, 0x9c, 0xb2, 0xef, 0x94, 0xfe, 0x2f,
	0x5f, 0xaf, 0x61, 0x30, 0x13, 0x17, 0x9c, 0x5c, 0x51, 0xcc, 0xa5, 0xb5, 0xfb, 0x35, 0xe5, 0xb8,
	0x6e, 0xba, 0x3a, 0x52, 0x18, 0x2c, 0xc7, 0xb6, 0xa1, 0x06, 0x7f, 0x1a, 0xd0, 0x57, 0x7a, 0x68,
	0xc1, 0xae, 0x62, 0x7c, 0xf0, 0x16, 0x24, 0x3d, 0xad, 0xd4, 0x70, 0x04, 0x77, 0x14, 0xde, 0x61,
	0x8b, 0x45, 0x71, 0x5b, 0x47, 0xc0, 0xd6, 0xcb, 0xb8, 0x07, 0x9d, 0xb3, 0x40, 0x58, 0xe9, 0xb9,
	0x9d, 0xb3, 0x00, 0x9f, 0x41, 0xd7, 0x8b, 0x73, 0x73, 0x5b, 0x78, 0x1b, 0xda, 0x65, 0x58, 0x6c,
	0x15, 0x16, 0xfb, 0x6d, 0x9c, 0xbb, 0x05, 0xc0, 0xfa, 0x06, 0x7d, 0xf5, 0xd4, 0xf8, 0x18, 0xc0,
	0x89, 0x42, 0x8a, 0xb9, 0xe6, 0x47, 0xab, 0x14, 0xfd, 0x73, 0xe2, 0x97, 0x2c, 0x10, 0xfd, 0xd2,
	0x88, 0x56, 0x29, 0xfa, 0x1f, 0xbd, 0x3c, 0x62, 0x5e, 0x30, 0xe5, 0xa9, 0xf0, 0xb2, 0xe3, 0x6a,
	0x15, 0x6b, 0x02, 0x03, 0x6d, 0x34, 0x38, 0x84, 0xde, 0x05, 0x4b, 0x42, 0x5f, 0xde, 0x54, 0x1e,
	0xf0, 0x2e, 0x74, 0xdf, 0x51, 0x2e, 0xd5, 0x8b, 0x4f, 0x34, 0x61, 0xfb, 0x9c, 0xb2, 0xcc, 0x9b,
	0x93, 0xd4, 0x54, 0xc7, 0xa3, 0x5f, 0xbd, 0x7a, 0x3e, 0x53, 0x4a, 0xaf, 0x42, 0x9f, 0xf0, 0x04,
	0x76, 0xf5, 0xf0, 0xe3, 0x41, 0xfd, 0x2e, 0x0d, 0x4b, 0x61, 0xbf, 0xe1, 0xa5, 0xad, 0x5b, 0x2f,
	0x0d, 0xfc, 0xac, 0xf6, 0xc2, 0x24, 0xa6, 0x8b, 0x70, 0xb1, 0x12, 0x44, 0x7c, 0x52, 0x93, 0x5a,
	0x97, 0x47, 0xb3, 0x32, 0x4e, 0x00, 0xaf, 0x53, 0x6e, 0x28, 0x78, 0x7d, 0x55, 0xe8, 0x82, 0xad,
	0x8b, 0xa4, 0x45, 0xf0, 0x8b, 0x4a, 0xb9, 0xfc, 0xf3, 0xd5, 0x2c, 0xe1, 0xd3, 0x75, 0xab, 0x8d,
	0x59, 0x6b, 0xd1, 0x9e, 0xc2, 0xb0, 0x89, 0x74, 0x63, 0xd1, 0xa6, 0xd4, 0xeb, 0xa2, 0xff, 0xd8,
	0x0a, 0x2d, 0xa2, 0x6f, 0x60, 0xcf, 0xf1, 0x62, 0x9f, 0xa2, 0x4a, 0xae, 0x01, 0xd7, 0xc4, 0x9d,
	0x6d, 0x89, 0x90, 0xbd, 0xfa, 0x1b, 0x00, 0x00, 0xff, 0xff, 0xc6, 0x3f, 0x38, 0x17, 0xd8, 0x06,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ScheduleServiceClient is the client API for ScheduleService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ScheduleServiceClient interface {
	ListSchedule(ctx context.Context, in *ListScheduleRequest, opts ...grpc.CallOption) (ScheduleService_ListScheduleClient, error)
	CreateOneTimeGrpcSchedule(ctx context.Context, in *CreateGrpcScheduleRequest, opts ...grpc.CallOption) (*Schedule, error)
	CreateGrpcSchedule(ctx context.Context, in *CreateGrpcScheduleRequest, opts ...grpc.CallOption) (*Schedule, error)
	UpdateGrpcSchedule(ctx context.Context, in *UpdateGrpcScheduleRequest, opts ...grpc.CallOption) (*Schedule, error)
	CreateOneTimeBrokerSchedule(ctx context.Context, in *CreateBrokerScheduleRequest, opts ...grpc.CallOption) (*Schedule, error)
	CreateBrokerSchedule(ctx context.Context, in *CreateBrokerScheduleRequest, opts ...grpc.CallOption) (*Schedule, error)
	UpdateBrokerSchedule(ctx context.Context, in *UpdateBrokerScheduleRequest, opts ...grpc.CallOption) (*Schedule, error)
	CancelSchedule(ctx context.Context, in *Schedule, opts ...grpc.CallOption) (*Schedule, error)
}

type scheduleServiceClient struct {
	cc *grpc.ClientConn
}

func NewScheduleServiceClient(cc *grpc.ClientConn) ScheduleServiceClient {
	return &scheduleServiceClient{cc}
}

func (c *scheduleServiceClient) ListSchedule(ctx context.Context, in *ListScheduleRequest, opts ...grpc.CallOption) (ScheduleService_ListScheduleClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ScheduleService_serviceDesc.Streams[0], "/schedule.ScheduleService/ListSchedule", opts...)
	if err != nil {
		return nil, err
	}
	x := &scheduleServiceListScheduleClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type ScheduleService_ListScheduleClient interface {
	Recv() (*Schedule, error)
	grpc.ClientStream
}

type scheduleServiceListScheduleClient struct {
	grpc.ClientStream
}

func (x *scheduleServiceListScheduleClient) Recv() (*Schedule, error) {
	m := new(Schedule)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *scheduleServiceClient) CreateOneTimeGrpcSchedule(ctx context.Context, in *CreateGrpcScheduleRequest, opts ...grpc.CallOption) (*Schedule, error) {
	out := new(Schedule)
	err := c.cc.Invoke(ctx, "/schedule.ScheduleService/CreateOneTimeGrpcSchedule", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *scheduleServiceClient) CreateGrpcSchedule(ctx context.Context, in *CreateGrpcScheduleRequest, opts ...grpc.CallOption) (*Schedule, error) {
	out := new(Schedule)
	err := c.cc.Invoke(ctx, "/schedule.ScheduleService/CreateGrpcSchedule", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *scheduleServiceClient) UpdateGrpcSchedule(ctx context.Context, in *UpdateGrpcScheduleRequest, opts ...grpc.CallOption) (*Schedule, error) {
	out := new(Schedule)
	err := c.cc.Invoke(ctx, "/schedule.ScheduleService/UpdateGrpcSchedule", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *scheduleServiceClient) CreateOneTimeBrokerSchedule(ctx context.Context, in *CreateBrokerScheduleRequest, opts ...grpc.CallOption) (*Schedule, error) {
	out := new(Schedule)
	err := c.cc.Invoke(ctx, "/schedule.ScheduleService/CreateOneTimeBrokerSchedule", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *scheduleServiceClient) CreateBrokerSchedule(ctx context.Context, in *CreateBrokerScheduleRequest, opts ...grpc.CallOption) (*Schedule, error) {
	out := new(Schedule)
	err := c.cc.Invoke(ctx, "/schedule.ScheduleService/CreateBrokerSchedule", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *scheduleServiceClient) UpdateBrokerSchedule(ctx context.Context, in *UpdateBrokerScheduleRequest, opts ...grpc.CallOption) (*Schedule, error) {
	out := new(Schedule)
	err := c.cc.Invoke(ctx, "/schedule.ScheduleService/UpdateBrokerSchedule", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *scheduleServiceClient) CancelSchedule(ctx context.Context, in *Schedule, opts ...grpc.CallOption) (*Schedule, error) {
	out := new(Schedule)
	err := c.cc.Invoke(ctx, "/schedule.ScheduleService/CancelSchedule", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ScheduleServiceServer is the server API for ScheduleService service.
type ScheduleServiceServer interface {
	ListSchedule(*ListScheduleRequest, ScheduleService_ListScheduleServer) error
	CreateOneTimeGrpcSchedule(context.Context, *CreateGrpcScheduleRequest) (*Schedule, error)
	CreateGrpcSchedule(context.Context, *CreateGrpcScheduleRequest) (*Schedule, error)
	UpdateGrpcSchedule(context.Context, *UpdateGrpcScheduleRequest) (*Schedule, error)
	CreateOneTimeBrokerSchedule(context.Context, *CreateBrokerScheduleRequest) (*Schedule, error)
	CreateBrokerSchedule(context.Context, *CreateBrokerScheduleRequest) (*Schedule, error)
	UpdateBrokerSchedule(context.Context, *UpdateBrokerScheduleRequest) (*Schedule, error)
	CancelSchedule(context.Context, *Schedule) (*Schedule, error)
}

// UnimplementedScheduleServiceServer can be embedded to have forward compatible implementations.
type UnimplementedScheduleServiceServer struct {
}

func (*UnimplementedScheduleServiceServer) ListSchedule(req *ListScheduleRequest, srv ScheduleService_ListScheduleServer) error {
	return status.Errorf(codes.Unimplemented, "method ListSchedule not implemented")
}
func (*UnimplementedScheduleServiceServer) CreateOneTimeGrpcSchedule(ctx context.Context, req *CreateGrpcScheduleRequest) (*Schedule, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateOneTimeGrpcSchedule not implemented")
}
func (*UnimplementedScheduleServiceServer) CreateGrpcSchedule(ctx context.Context, req *CreateGrpcScheduleRequest) (*Schedule, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateGrpcSchedule not implemented")
}
func (*UnimplementedScheduleServiceServer) UpdateGrpcSchedule(ctx context.Context, req *UpdateGrpcScheduleRequest) (*Schedule, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateGrpcSchedule not implemented")
}
func (*UnimplementedScheduleServiceServer) CreateOneTimeBrokerSchedule(ctx context.Context, req *CreateBrokerScheduleRequest) (*Schedule, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateOneTimeBrokerSchedule not implemented")
}
func (*UnimplementedScheduleServiceServer) CreateBrokerSchedule(ctx context.Context, req *CreateBrokerScheduleRequest) (*Schedule, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateBrokerSchedule not implemented")
}
func (*UnimplementedScheduleServiceServer) UpdateBrokerSchedule(ctx context.Context, req *UpdateBrokerScheduleRequest) (*Schedule, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateBrokerSchedule not implemented")
}
func (*UnimplementedScheduleServiceServer) CancelSchedule(ctx context.Context, req *Schedule) (*Schedule, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CancelSchedule not implemented")
}

func RegisterScheduleServiceServer(s *grpc.Server, srv ScheduleServiceServer) {
	s.RegisterService(&_ScheduleService_serviceDesc, srv)
}

func _ScheduleService_ListSchedule_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ListScheduleRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ScheduleServiceServer).ListSchedule(m, &scheduleServiceListScheduleServer{stream})
}

type ScheduleService_ListScheduleServer interface {
	Send(*Schedule) error
	grpc.ServerStream
}

type scheduleServiceListScheduleServer struct {
	grpc.ServerStream
}

func (x *scheduleServiceListScheduleServer) Send(m *Schedule) error {
	return x.ServerStream.SendMsg(m)
}

func _ScheduleService_CreateOneTimeGrpcSchedule_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateGrpcScheduleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ScheduleServiceServer).CreateOneTimeGrpcSchedule(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/schedule.ScheduleService/CreateOneTimeGrpcSchedule",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ScheduleServiceServer).CreateOneTimeGrpcSchedule(ctx, req.(*CreateGrpcScheduleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ScheduleService_CreateGrpcSchedule_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateGrpcScheduleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ScheduleServiceServer).CreateGrpcSchedule(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/schedule.ScheduleService/CreateGrpcSchedule",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ScheduleServiceServer).CreateGrpcSchedule(ctx, req.(*CreateGrpcScheduleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ScheduleService_UpdateGrpcSchedule_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateGrpcScheduleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ScheduleServiceServer).UpdateGrpcSchedule(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/schedule.ScheduleService/UpdateGrpcSchedule",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ScheduleServiceServer).UpdateGrpcSchedule(ctx, req.(*UpdateGrpcScheduleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ScheduleService_CreateOneTimeBrokerSchedule_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateBrokerScheduleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ScheduleServiceServer).CreateOneTimeBrokerSchedule(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/schedule.ScheduleService/CreateOneTimeBrokerSchedule",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ScheduleServiceServer).CreateOneTimeBrokerSchedule(ctx, req.(*CreateBrokerScheduleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ScheduleService_CreateBrokerSchedule_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateBrokerScheduleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ScheduleServiceServer).CreateBrokerSchedule(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/schedule.ScheduleService/CreateBrokerSchedule",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ScheduleServiceServer).CreateBrokerSchedule(ctx, req.(*CreateBrokerScheduleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ScheduleService_UpdateBrokerSchedule_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateBrokerScheduleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ScheduleServiceServer).UpdateBrokerSchedule(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/schedule.ScheduleService/UpdateBrokerSchedule",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ScheduleServiceServer).UpdateBrokerSchedule(ctx, req.(*UpdateBrokerScheduleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ScheduleService_CancelSchedule_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Schedule)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ScheduleServiceServer).CancelSchedule(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/schedule.ScheduleService/CancelSchedule",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ScheduleServiceServer).CancelSchedule(ctx, req.(*Schedule))
	}
	return interceptor(ctx, in, info, handler)
}

var _ScheduleService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "schedule.ScheduleService",
	HandlerType: (*ScheduleServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateOneTimeGrpcSchedule",
			Handler:    _ScheduleService_CreateOneTimeGrpcSchedule_Handler,
		},
		{
			MethodName: "CreateGrpcSchedule",
			Handler:    _ScheduleService_CreateGrpcSchedule_Handler,
		},
		{
			MethodName: "UpdateGrpcSchedule",
			Handler:    _ScheduleService_UpdateGrpcSchedule_Handler,
		},
		{
			MethodName: "CreateOneTimeBrokerSchedule",
			Handler:    _ScheduleService_CreateOneTimeBrokerSchedule_Handler,
		},
		{
			MethodName: "CreateBrokerSchedule",
			Handler:    _ScheduleService_CreateBrokerSchedule_Handler,
		},
		{
			MethodName: "UpdateBrokerSchedule",
			Handler:    _ScheduleService_UpdateBrokerSchedule_Handler,
		},
		{
			MethodName: "CancelSchedule",
			Handler:    _ScheduleService_CancelSchedule_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ListSchedule",
			Handler:       _ScheduleService_ListSchedule_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "proto/schedule/schedule.proto",
}
